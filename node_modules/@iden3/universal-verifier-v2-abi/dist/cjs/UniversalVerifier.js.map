{"version":3,"file":"UniversalVerifier.js","sourceRoot":"","sources":["../../src/UniversalVerifier.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumberish,\n  BytesLike,\n  FunctionFragment,\n  Result,\n  Interface,\n  EventFragment,\n  AddressLike,\n  ContractRunner,\n  ContractMethod,\n  Listener,\n} from \"ethers\";\nimport type {\n  TypedContractEvent,\n  TypedDeferredTopicFilter,\n  TypedEventLog,\n  TypedLogDescription,\n  TypedListener,\n  TypedContractMethod,\n} from \"./common\";\n\nexport declare namespace Verifier {\n  export type AuthMethodDataStruct = {\n    validator: AddressLike;\n    params: BytesLike;\n    isActive: boolean;\n  };\n\n  export type AuthMethodDataStructOutput = [\n    validator: string,\n    params: string,\n    isActive: boolean\n  ] & { validator: string; params: string; isActive: boolean };\n}\n\nexport declare namespace IVerifier {\n  export type RequestInfoStruct = {\n    requestId: BigNumberish;\n    metadata: string;\n    validator: AddressLike;\n    params: BytesLike;\n    creator: AddressLike;\n  };\n\n  export type RequestInfoStructOutput = [\n    requestId: bigint,\n    metadata: string,\n    validator: string,\n    params: string,\n    creator: string\n  ] & {\n    requestId: bigint;\n    metadata: string;\n    validator: string;\n    params: string;\n    creator: string;\n  };\n\n  export type MultiRequestStruct = {\n    multiRequestId: BigNumberish;\n    requestIds: BigNumberish[];\n    groupIds: BigNumberish[];\n    metadata: BytesLike;\n  };\n\n  export type MultiRequestStructOutput = [\n    multiRequestId: bigint,\n    requestIds: bigint[],\n    groupIds: bigint[],\n    metadata: string\n  ] & {\n    multiRequestId: bigint;\n    requestIds: bigint[];\n    groupIds: bigint[];\n    metadata: string;\n  };\n\n  export type RequestProofStatusStruct = {\n    requestId: BigNumberish;\n    isVerified: boolean;\n    validatorVersion: string;\n    timestamp: BigNumberish;\n  };\n\n  export type RequestProofStatusStructOutput = [\n    requestId: bigint,\n    isVerified: boolean,\n    validatorVersion: string,\n    timestamp: bigint\n  ] & {\n    requestId: bigint;\n    isVerified: boolean;\n    validatorVersion: string;\n    timestamp: bigint;\n  };\n\n  export type AuthMethodStruct = {\n    authMethod: string;\n    validator: AddressLike;\n    params: BytesLike;\n  };\n\n  export type AuthMethodStructOutput = [\n    authMethod: string,\n    validator: string,\n    params: string\n  ] & { authMethod: string; validator: string; params: string };\n\n  export type RequestStruct = {\n    requestId: BigNumberish;\n    metadata: string;\n    validator: AddressLike;\n    params: BytesLike;\n    creator: AddressLike;\n  };\n\n  export type RequestStructOutput = [\n    requestId: bigint,\n    metadata: string,\n    validator: string,\n    params: string,\n    creator: string\n  ] & {\n    requestId: bigint;\n    metadata: string;\n    validator: string;\n    params: string;\n    creator: string;\n  };\n\n  export type AuthResponseStruct = { authMethod: string; proof: BytesLike };\n\n  export type AuthResponseStructOutput = [authMethod: string, proof: string] & {\n    authMethod: string;\n    proof: string;\n  };\n\n  export type ResponseStruct = {\n    requestId: BigNumberish;\n    proof: BytesLike;\n    metadata: BytesLike;\n  };\n\n  export type ResponseStructOutput = [\n    requestId: bigint,\n    proof: string,\n    metadata: string\n  ] & { requestId: bigint; proof: string; metadata: string };\n}\n\nexport declare namespace IRequestValidator {\n  export type ResponseFieldStruct = {\n    name: string;\n    value: BigNumberish;\n    rawValue: BytesLike;\n  };\n\n  export type ResponseFieldStructOutput = [\n    name: string,\n    value: bigint,\n    rawValue: string\n  ] & { name: string; value: bigint; rawValue: string };\n}\n\nexport interface UniversalVerifierInterface extends Interface {\n  getFunction(\n    nameOrSignature:\n      | \"VERSION\"\n      | \"acceptOwnership\"\n      | \"addValidatorToWhitelist\"\n      | \"areMultiRequestProofsVerified\"\n      | \"authMethodExists\"\n      | \"disableAuthMethod\"\n      | \"disableRequest\"\n      | \"enableAuthMethod\"\n      | \"enableRequest\"\n      | \"getAuthMethod\"\n      | \"getGroupedRequests\"\n      | \"getGroupsCount\"\n      | \"getMultiRequest\"\n      | \"getMultiRequestProofsStatus\"\n      | \"getRequest\"\n      | \"getRequestOwner\"\n      | \"getRequestProofStatus\"\n      | \"getRequestsCount\"\n      | \"getResponseFieldValue\"\n      | \"getResponseFields\"\n      | \"getStateAddress\"\n      | \"getVerifierID\"\n      | \"groupIdExists\"\n      | \"initialize\"\n      | \"isRequestEnabled\"\n      | \"isRequestProofVerified\"\n      | \"isWhitelistedValidator\"\n      | \"multiRequestIdExists\"\n      | \"owner\"\n      | \"pendingOwner\"\n      | \"removeValidatorFromWhitelist\"\n      | \"renounceOwnership\"\n      | \"requestIdExists\"\n      | \"setAuthMethod\"\n      | \"setMultiRequest\"\n      | \"setRequestOwner\"\n      | \"setRequests\"\n      | \"setState\"\n      | \"setVerifierID\"\n      | \"submitResponse\"\n      | \"transferOwnership\"\n      | \"updateRequest\"\n      | \"version\"\n  ): FunctionFragment;\n\n  getEvent(\n    nameOrSignatureOrTopic:\n      | \"AuthMethodSet\"\n      | \"AuthResponseSubmitted\"\n      | \"Initialized\"\n      | \"MultiRequestSet\"\n      | \"OwnershipTransferStarted\"\n      | \"OwnershipTransferred\"\n      | \"RequestSet\"\n      | \"RequestUpdate\"\n      | \"ResponseSubmitted\"\n  ): EventFragment;\n\n  encodeFunctionData(functionFragment: \"VERSION\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"acceptOwnership\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"addValidatorToWhitelist\",\n    values: [AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"areMultiRequestProofsVerified\",\n    values: [BigNumberish, AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"authMethodExists\",\n    values: [string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"disableAuthMethod\",\n    values: [string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"disableRequest\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"enableAuthMethod\",\n    values: [string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"enableRequest\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getAuthMethod\",\n    values: [string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getGroupedRequests\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getGroupsCount\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getMultiRequest\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getMultiRequestProofsStatus\",\n    values: [BigNumberish, AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRequest\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRequestOwner\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRequestProofStatus\",\n    values: [AddressLike, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRequestsCount\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getResponseFieldValue\",\n    values: [BigNumberish, AddressLike, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getResponseFields\",\n    values: [BigNumberish, AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getStateAddress\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getVerifierID\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"groupIdExists\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"initialize\",\n    values: [AddressLike, AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRequestEnabled\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isRequestProofVerified\",\n    values: [AddressLike, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isWhitelistedValidator\",\n    values: [AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"multiRequestIdExists\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(functionFragment: \"owner\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"pendingOwner\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"removeValidatorFromWhitelist\",\n    values: [AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"renounceOwnership\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"requestIdExists\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setAuthMethod\",\n    values: [IVerifier.AuthMethodStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setMultiRequest\",\n    values: [IVerifier.MultiRequestStruct]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setRequestOwner\",\n    values: [BigNumberish, AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setRequests\",\n    values: [IVerifier.RequestStruct[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setState\",\n    values: [AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setVerifierID\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"submitResponse\",\n    values: [\n      IVerifier.AuthResponseStruct,\n      IVerifier.ResponseStruct[],\n      BytesLike\n    ]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"transferOwnership\",\n    values: [AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"updateRequest\",\n    values: [IVerifier.RequestStruct]\n  ): string;\n  encodeFunctionData(functionFragment: \"version\", values?: undefined): string;\n\n  decodeFunctionResult(functionFragment: \"VERSION\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"acceptOwnership\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"addValidatorToWhitelist\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"areMultiRequestProofsVerified\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"authMethodExists\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"disableAuthMethod\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"disableRequest\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"enableAuthMethod\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"enableRequest\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getAuthMethod\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getGroupedRequests\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getGroupsCount\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getMultiRequest\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getMultiRequestProofsStatus\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"getRequest\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRequestOwner\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRequestProofStatus\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRequestsCount\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getResponseFieldValue\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getResponseFields\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getStateAddress\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getVerifierID\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"groupIdExists\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"initialize\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRequestEnabled\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isRequestProofVerified\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"isWhitelistedValidator\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"multiRequestIdExists\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"owner\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"pendingOwner\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"removeValidatorFromWhitelist\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"renounceOwnership\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"requestIdExists\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setAuthMethod\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setMultiRequest\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setRequestOwner\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setRequests\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"setState\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"setVerifierID\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"submitResponse\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"transferOwnership\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"updateRequest\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"version\", data: BytesLike): Result;\n}\n\nexport namespace AuthMethodSetEvent {\n  export type InputTuple = [\n    authMethod: string,\n    validator: AddressLike,\n    params: BytesLike\n  ];\n  export type OutputTuple = [\n    authMethod: string,\n    validator: string,\n    params: string\n  ];\n  export interface OutputObject {\n    authMethod: string;\n    validator: string;\n    params: string;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace AuthResponseSubmittedEvent {\n  export type InputTuple = [authMethod: string, caller: AddressLike];\n  export type OutputTuple = [authMethod: string, caller: string];\n  export interface OutputObject {\n    authMethod: string;\n    caller: string;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace InitializedEvent {\n  export type InputTuple = [version: BigNumberish];\n  export type OutputTuple = [version: bigint];\n  export interface OutputObject {\n    version: bigint;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace MultiRequestSetEvent {\n  export type InputTuple = [\n    multiRequestId: BigNumberish,\n    requestIds: BigNumberish[],\n    groupIds: BigNumberish[]\n  ];\n  export type OutputTuple = [\n    multiRequestId: bigint,\n    requestIds: bigint[],\n    groupIds: bigint[]\n  ];\n  export interface OutputObject {\n    multiRequestId: bigint;\n    requestIds: bigint[];\n    groupIds: bigint[];\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace OwnershipTransferStartedEvent {\n  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];\n  export type OutputTuple = [previousOwner: string, newOwner: string];\n  export interface OutputObject {\n    previousOwner: string;\n    newOwner: string;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace OwnershipTransferredEvent {\n  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];\n  export type OutputTuple = [previousOwner: string, newOwner: string];\n  export interface OutputObject {\n    previousOwner: string;\n    newOwner: string;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace RequestSetEvent {\n  export type InputTuple = [\n    requestId: BigNumberish,\n    creator: AddressLike,\n    metadata: string,\n    validator: AddressLike,\n    params: BytesLike\n  ];\n  export type OutputTuple = [\n    requestId: bigint,\n    creator: string,\n    metadata: string,\n    validator: string,\n    params: string\n  ];\n  export interface OutputObject {\n    requestId: bigint;\n    creator: string;\n    metadata: string;\n    validator: string;\n    params: string;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace RequestUpdateEvent {\n  export type InputTuple = [\n    requestId: BigNumberish,\n    creator: AddressLike,\n    metadata: string,\n    validator: AddressLike,\n    params: BytesLike\n  ];\n  export type OutputTuple = [\n    requestId: bigint,\n    creator: string,\n    metadata: string,\n    validator: string,\n    params: string\n  ];\n  export interface OutputObject {\n    requestId: bigint;\n    creator: string;\n    metadata: string;\n    validator: string;\n    params: string;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace ResponseSubmittedEvent {\n  export type InputTuple = [requestId: BigNumberish, caller: AddressLike];\n  export type OutputTuple = [requestId: bigint, caller: string];\n  export interface OutputObject {\n    requestId: bigint;\n    caller: string;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport interface UniversalVerifier extends BaseContract {\n  connect(runner?: ContractRunner | null): UniversalVerifier;\n  waitForDeployment(): Promise<this>;\n\n  interface: UniversalVerifierInterface;\n\n  queryFilter<TCEvent extends TypedContractEvent>(\n    event: TCEvent,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TypedEventLog<TCEvent>>>;\n  queryFilter<TCEvent extends TypedContractEvent>(\n    filter: TypedDeferredTopicFilter<TCEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TypedEventLog<TCEvent>>>;\n\n  on<TCEvent extends TypedContractEvent>(\n    event: TCEvent,\n    listener: TypedListener<TCEvent>\n  ): Promise<this>;\n  on<TCEvent extends TypedContractEvent>(\n    filter: TypedDeferredTopicFilter<TCEvent>,\n    listener: TypedListener<TCEvent>\n  ): Promise<this>;\n\n  once<TCEvent extends TypedContractEvent>(\n    event: TCEvent,\n    listener: TypedListener<TCEvent>\n  ): Promise<this>;\n  once<TCEvent extends TypedContractEvent>(\n    filter: TypedDeferredTopicFilter<TCEvent>,\n    listener: TypedListener<TCEvent>\n  ): Promise<this>;\n\n  listeners<TCEvent extends TypedContractEvent>(\n    event: TCEvent\n  ): Promise<Array<TypedListener<TCEvent>>>;\n  listeners(eventName?: string): Promise<Array<Listener>>;\n  removeAllListeners<TCEvent extends TypedContractEvent>(\n    event?: TCEvent\n  ): Promise<this>;\n\n  VERSION: TypedContractMethod<[], [string], \"view\">;\n\n  acceptOwnership: TypedContractMethod<[], [void], \"nonpayable\">;\n\n  addValidatorToWhitelist: TypedContractMethod<\n    [validator: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  areMultiRequestProofsVerified: TypedContractMethod<\n    [multiRequestId: BigNumberish, userAddress: AddressLike],\n    [boolean],\n    \"view\"\n  >;\n\n  authMethodExists: TypedContractMethod<\n    [authMethod: string],\n    [boolean],\n    \"view\"\n  >;\n\n  disableAuthMethod: TypedContractMethod<\n    [authMethod: string],\n    [void],\n    \"nonpayable\"\n  >;\n\n  disableRequest: TypedContractMethod<\n    [requestId: BigNumberish],\n    [void],\n    \"nonpayable\"\n  >;\n\n  enableAuthMethod: TypedContractMethod<\n    [authMethod: string],\n    [void],\n    \"nonpayable\"\n  >;\n\n  enableRequest: TypedContractMethod<\n    [requestId: BigNumberish],\n    [void],\n    \"nonpayable\"\n  >;\n\n  getAuthMethod: TypedContractMethod<\n    [authMethod: string],\n    [Verifier.AuthMethodDataStructOutput],\n    \"view\"\n  >;\n\n  getGroupedRequests: TypedContractMethod<\n    [groupID: BigNumberish],\n    [IVerifier.RequestInfoStructOutput[]],\n    \"view\"\n  >;\n\n  getGroupsCount: TypedContractMethod<[], [bigint], \"view\">;\n\n  getMultiRequest: TypedContractMethod<\n    [multiRequestId: BigNumberish],\n    [IVerifier.MultiRequestStructOutput],\n    \"view\"\n  >;\n\n  getMultiRequestProofsStatus: TypedContractMethod<\n    [multiRequestId: BigNumberish, userAddress: AddressLike],\n    [IVerifier.RequestProofStatusStructOutput[]],\n    \"view\"\n  >;\n\n  getRequest: TypedContractMethod<\n    [requestId: BigNumberish],\n    [IVerifier.RequestInfoStructOutput],\n    \"view\"\n  >;\n\n  getRequestOwner: TypedContractMethod<\n    [requestId: BigNumberish],\n    [string],\n    \"view\"\n  >;\n\n  getRequestProofStatus: TypedContractMethod<\n    [sender: AddressLike, requestId: BigNumberish],\n    [IVerifier.RequestProofStatusStructOutput],\n    \"view\"\n  >;\n\n  getRequestsCount: TypedContractMethod<[], [bigint], \"view\">;\n\n  getResponseFieldValue: TypedContractMethod<\n    [requestId: BigNumberish, sender: AddressLike, responseFieldName: string],\n    [bigint],\n    \"view\"\n  >;\n\n  getResponseFields: TypedContractMethod<\n    [requestId: BigNumberish, sender: AddressLike],\n    [IRequestValidator.ResponseFieldStructOutput[]],\n    \"view\"\n  >;\n\n  getStateAddress: TypedContractMethod<[], [string], \"view\">;\n\n  getVerifierID: TypedContractMethod<[], [bigint], \"view\">;\n\n  groupIdExists: TypedContractMethod<\n    [groupId: BigNumberish],\n    [boolean],\n    \"view\"\n  >;\n\n  initialize: TypedContractMethod<\n    [state: AddressLike, owner: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  isRequestEnabled: TypedContractMethod<\n    [requestId: BigNumberish],\n    [boolean],\n    \"view\"\n  >;\n\n  isRequestProofVerified: TypedContractMethod<\n    [sender: AddressLike, requestId: BigNumberish],\n    [boolean],\n    \"view\"\n  >;\n\n  isWhitelistedValidator: TypedContractMethod<\n    [validator: AddressLike],\n    [boolean],\n    \"view\"\n  >;\n\n  multiRequestIdExists: TypedContractMethod<\n    [multiRequestId: BigNumberish],\n    [boolean],\n    \"view\"\n  >;\n\n  owner: TypedContractMethod<[], [string], \"view\">;\n\n  pendingOwner: TypedContractMethod<[], [string], \"view\">;\n\n  removeValidatorFromWhitelist: TypedContractMethod<\n    [validator: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  renounceOwnership: TypedContractMethod<[], [void], \"nonpayable\">;\n\n  requestIdExists: TypedContractMethod<\n    [requestId: BigNumberish],\n    [boolean],\n    \"view\"\n  >;\n\n  setAuthMethod: TypedContractMethod<\n    [authMethod: IVerifier.AuthMethodStruct],\n    [void],\n    \"nonpayable\"\n  >;\n\n  setMultiRequest: TypedContractMethod<\n    [multiRequest: IVerifier.MultiRequestStruct],\n    [void],\n    \"nonpayable\"\n  >;\n\n  setRequestOwner: TypedContractMethod<\n    [requestId: BigNumberish, requestOwner: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  setRequests: TypedContractMethod<\n    [requests: IVerifier.RequestStruct[]],\n    [void],\n    \"nonpayable\"\n  >;\n\n  setState: TypedContractMethod<[state: AddressLike], [void], \"nonpayable\">;\n\n  setVerifierID: TypedContractMethod<\n    [verifierID: BigNumberish],\n    [void],\n    \"nonpayable\"\n  >;\n\n  submitResponse: TypedContractMethod<\n    [\n      authResponse: IVerifier.AuthResponseStruct,\n      responses: IVerifier.ResponseStruct[],\n      crossChainProofs: BytesLike\n    ],\n    [void],\n    \"nonpayable\"\n  >;\n\n  transferOwnership: TypedContractMethod<\n    [newOwner: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  updateRequest: TypedContractMethod<\n    [request: IVerifier.RequestStruct],\n    [void],\n    \"nonpayable\"\n  >;\n\n  version: TypedContractMethod<[], [string], \"view\">;\n\n  getFunction<T extends ContractMethod = ContractMethod>(\n    key: string | FunctionFragment\n  ): T;\n\n  getFunction(\n    nameOrSignature: \"VERSION\"\n  ): TypedContractMethod<[], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"acceptOwnership\"\n  ): TypedContractMethod<[], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"addValidatorToWhitelist\"\n  ): TypedContractMethod<[validator: AddressLike], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"areMultiRequestProofsVerified\"\n  ): TypedContractMethod<\n    [multiRequestId: BigNumberish, userAddress: AddressLike],\n    [boolean],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"authMethodExists\"\n  ): TypedContractMethod<[authMethod: string], [boolean], \"view\">;\n  getFunction(\n    nameOrSignature: \"disableAuthMethod\"\n  ): TypedContractMethod<[authMethod: string], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"disableRequest\"\n  ): TypedContractMethod<[requestId: BigNumberish], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"enableAuthMethod\"\n  ): TypedContractMethod<[authMethod: string], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"enableRequest\"\n  ): TypedContractMethod<[requestId: BigNumberish], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"getAuthMethod\"\n  ): TypedContractMethod<\n    [authMethod: string],\n    [Verifier.AuthMethodDataStructOutput],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"getGroupedRequests\"\n  ): TypedContractMethod<\n    [groupID: BigNumberish],\n    [IVerifier.RequestInfoStructOutput[]],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"getGroupsCount\"\n  ): TypedContractMethod<[], [bigint], \"view\">;\n  getFunction(\n    nameOrSignature: \"getMultiRequest\"\n  ): TypedContractMethod<\n    [multiRequestId: BigNumberish],\n    [IVerifier.MultiRequestStructOutput],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"getMultiRequestProofsStatus\"\n  ): TypedContractMethod<\n    [multiRequestId: BigNumberish, userAddress: AddressLike],\n    [IVerifier.RequestProofStatusStructOutput[]],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"getRequest\"\n  ): TypedContractMethod<\n    [requestId: BigNumberish],\n    [IVerifier.RequestInfoStructOutput],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"getRequestOwner\"\n  ): TypedContractMethod<[requestId: BigNumberish], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"getRequestProofStatus\"\n  ): TypedContractMethod<\n    [sender: AddressLike, requestId: BigNumberish],\n    [IVerifier.RequestProofStatusStructOutput],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"getRequestsCount\"\n  ): TypedContractMethod<[], [bigint], \"view\">;\n  getFunction(\n    nameOrSignature: \"getResponseFieldValue\"\n  ): TypedContractMethod<\n    [requestId: BigNumberish, sender: AddressLike, responseFieldName: string],\n    [bigint],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"getResponseFields\"\n  ): TypedContractMethod<\n    [requestId: BigNumberish, sender: AddressLike],\n    [IRequestValidator.ResponseFieldStructOutput[]],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"getStateAddress\"\n  ): TypedContractMethod<[], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"getVerifierID\"\n  ): TypedContractMethod<[], [bigint], \"view\">;\n  getFunction(\n    nameOrSignature: \"groupIdExists\"\n  ): TypedContractMethod<[groupId: BigNumberish], [boolean], \"view\">;\n  getFunction(\n    nameOrSignature: \"initialize\"\n  ): TypedContractMethod<\n    [state: AddressLike, owner: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"isRequestEnabled\"\n  ): TypedContractMethod<[requestId: BigNumberish], [boolean], \"view\">;\n  getFunction(\n    nameOrSignature: \"isRequestProofVerified\"\n  ): TypedContractMethod<\n    [sender: AddressLike, requestId: BigNumberish],\n    [boolean],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"isWhitelistedValidator\"\n  ): TypedContractMethod<[validator: AddressLike], [boolean], \"view\">;\n  getFunction(\n    nameOrSignature: \"multiRequestIdExists\"\n  ): TypedContractMethod<[multiRequestId: BigNumberish], [boolean], \"view\">;\n  getFunction(\n    nameOrSignature: \"owner\"\n  ): TypedContractMethod<[], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"pendingOwner\"\n  ): TypedContractMethod<[], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"removeValidatorFromWhitelist\"\n  ): TypedContractMethod<[validator: AddressLike], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"renounceOwnership\"\n  ): TypedContractMethod<[], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"requestIdExists\"\n  ): TypedContractMethod<[requestId: BigNumberish], [boolean], \"view\">;\n  getFunction(\n    nameOrSignature: \"setAuthMethod\"\n  ): TypedContractMethod<\n    [authMethod: IVerifier.AuthMethodStruct],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"setMultiRequest\"\n  ): TypedContractMethod<\n    [multiRequest: IVerifier.MultiRequestStruct],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"setRequestOwner\"\n  ): TypedContractMethod<\n    [requestId: BigNumberish, requestOwner: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"setRequests\"\n  ): TypedContractMethod<\n    [requests: IVerifier.RequestStruct[]],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"setState\"\n  ): TypedContractMethod<[state: AddressLike], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"setVerifierID\"\n  ): TypedContractMethod<[verifierID: BigNumberish], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"submitResponse\"\n  ): TypedContractMethod<\n    [\n      authResponse: IVerifier.AuthResponseStruct,\n      responses: IVerifier.ResponseStruct[],\n      crossChainProofs: BytesLike\n    ],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"transferOwnership\"\n  ): TypedContractMethod<[newOwner: AddressLike], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"updateRequest\"\n  ): TypedContractMethod<\n    [request: IVerifier.RequestStruct],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"version\"\n  ): TypedContractMethod<[], [string], \"view\">;\n\n  getEvent(\n    key: \"AuthMethodSet\"\n  ): TypedContractEvent<\n    AuthMethodSetEvent.InputTuple,\n    AuthMethodSetEvent.OutputTuple,\n    AuthMethodSetEvent.OutputObject\n  >;\n  getEvent(\n    key: \"AuthResponseSubmitted\"\n  ): TypedContractEvent<\n    AuthResponseSubmittedEvent.InputTuple,\n    AuthResponseSubmittedEvent.OutputTuple,\n    AuthResponseSubmittedEvent.OutputObject\n  >;\n  getEvent(\n    key: \"Initialized\"\n  ): TypedContractEvent<\n    InitializedEvent.InputTuple,\n    InitializedEvent.OutputTuple,\n    InitializedEvent.OutputObject\n  >;\n  getEvent(\n    key: \"MultiRequestSet\"\n  ): TypedContractEvent<\n    MultiRequestSetEvent.InputTuple,\n    MultiRequestSetEvent.OutputTuple,\n    MultiRequestSetEvent.OutputObject\n  >;\n  getEvent(\n    key: \"OwnershipTransferStarted\"\n  ): TypedContractEvent<\n    OwnershipTransferStartedEvent.InputTuple,\n    OwnershipTransferStartedEvent.OutputTuple,\n    OwnershipTransferStartedEvent.OutputObject\n  >;\n  getEvent(\n    key: \"OwnershipTransferred\"\n  ): TypedContractEvent<\n    OwnershipTransferredEvent.InputTuple,\n    OwnershipTransferredEvent.OutputTuple,\n    OwnershipTransferredEvent.OutputObject\n  >;\n  getEvent(\n    key: \"RequestSet\"\n  ): TypedContractEvent<\n    RequestSetEvent.InputTuple,\n    RequestSetEvent.OutputTuple,\n    RequestSetEvent.OutputObject\n  >;\n  getEvent(\n    key: \"RequestUpdate\"\n  ): TypedContractEvent<\n    RequestUpdateEvent.InputTuple,\n    RequestUpdateEvent.OutputTuple,\n    RequestUpdateEvent.OutputObject\n  >;\n  getEvent(\n    key: \"ResponseSubmitted\"\n  ): TypedContractEvent<\n    ResponseSubmittedEvent.InputTuple,\n    ResponseSubmittedEvent.OutputTuple,\n    ResponseSubmittedEvent.OutputObject\n  >;\n\n  filters: {\n    \"AuthMethodSet(string,address,bytes)\": TypedContractEvent<\n      AuthMethodSetEvent.InputTuple,\n      AuthMethodSetEvent.OutputTuple,\n      AuthMethodSetEvent.OutputObject\n    >;\n    AuthMethodSet: TypedContractEvent<\n      AuthMethodSetEvent.InputTuple,\n      AuthMethodSetEvent.OutputTuple,\n      AuthMethodSetEvent.OutputObject\n    >;\n\n    \"AuthResponseSubmitted(string,address)\": TypedContractEvent<\n      AuthResponseSubmittedEvent.InputTuple,\n      AuthResponseSubmittedEvent.OutputTuple,\n      AuthResponseSubmittedEvent.OutputObject\n    >;\n    AuthResponseSubmitted: TypedContractEvent<\n      AuthResponseSubmittedEvent.InputTuple,\n      AuthResponseSubmittedEvent.OutputTuple,\n      AuthResponseSubmittedEvent.OutputObject\n    >;\n\n    \"Initialized(uint64)\": TypedContractEvent<\n      InitializedEvent.InputTuple,\n      InitializedEvent.OutputTuple,\n      InitializedEvent.OutputObject\n    >;\n    Initialized: TypedContractEvent<\n      InitializedEvent.InputTuple,\n      InitializedEvent.OutputTuple,\n      InitializedEvent.OutputObject\n    >;\n\n    \"MultiRequestSet(uint256,uint256[],uint256[])\": TypedContractEvent<\n      MultiRequestSetEvent.InputTuple,\n      MultiRequestSetEvent.OutputTuple,\n      MultiRequestSetEvent.OutputObject\n    >;\n    MultiRequestSet: TypedContractEvent<\n      MultiRequestSetEvent.InputTuple,\n      MultiRequestSetEvent.OutputTuple,\n      MultiRequestSetEvent.OutputObject\n    >;\n\n    \"OwnershipTransferStarted(address,address)\": TypedContractEvent<\n      OwnershipTransferStartedEvent.InputTuple,\n      OwnershipTransferStartedEvent.OutputTuple,\n      OwnershipTransferStartedEvent.OutputObject\n    >;\n    OwnershipTransferStarted: TypedContractEvent<\n      OwnershipTransferStartedEvent.InputTuple,\n      OwnershipTransferStartedEvent.OutputTuple,\n      OwnershipTransferStartedEvent.OutputObject\n    >;\n\n    \"OwnershipTransferred(address,address)\": TypedContractEvent<\n      OwnershipTransferredEvent.InputTuple,\n      OwnershipTransferredEvent.OutputTuple,\n      OwnershipTransferredEvent.OutputObject\n    >;\n    OwnershipTransferred: TypedContractEvent<\n      OwnershipTransferredEvent.InputTuple,\n      OwnershipTransferredEvent.OutputTuple,\n      OwnershipTransferredEvent.OutputObject\n    >;\n\n    \"RequestSet(uint256,address,string,address,bytes)\": TypedContractEvent<\n      RequestSetEvent.InputTuple,\n      RequestSetEvent.OutputTuple,\n      RequestSetEvent.OutputObject\n    >;\n    RequestSet: TypedContractEvent<\n      RequestSetEvent.InputTuple,\n      RequestSetEvent.OutputTuple,\n      RequestSetEvent.OutputObject\n    >;\n\n    \"RequestUpdate(uint256,address,string,address,bytes)\": TypedContractEvent<\n      RequestUpdateEvent.InputTuple,\n      RequestUpdateEvent.OutputTuple,\n      RequestUpdateEvent.OutputObject\n    >;\n    RequestUpdate: TypedContractEvent<\n      RequestUpdateEvent.InputTuple,\n      RequestUpdateEvent.OutputTuple,\n      RequestUpdateEvent.OutputObject\n    >;\n\n    \"ResponseSubmitted(uint256,address)\": TypedContractEvent<\n      ResponseSubmittedEvent.InputTuple,\n      ResponseSubmittedEvent.OutputTuple,\n      ResponseSubmittedEvent.OutputObject\n    >;\n    ResponseSubmitted: TypedContractEvent<\n      ResponseSubmittedEvent.InputTuple,\n      ResponseSubmittedEvent.OutputTuple,\n      ResponseSubmittedEvent.OutputObject\n    >;\n  };\n}\n"]}